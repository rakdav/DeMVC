<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>